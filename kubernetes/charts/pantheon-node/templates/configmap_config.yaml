---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "pantheon-node.fullname" . }}-config
  labels:
    app.kubernetes.io/name: {{ include "pantheon-node.name" . }}
    helm.sh/chart: {{ include "pantheon-node.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
data:
  config.toml: |-
    # Every possible CLI should be in this file.
    # The odds are you are reading this because you added a CLI and didn't add it
    # here and a test broke.  To fix the test add your CLI to this file.
    #
    # Please use a plausible value, Pantheon has to at least be able to parse it.
    # If it is a multi-valued CLI make it a TOML array.
    # If it is a number or boolean make it a number or boolean
    # All other config options are strings, and must be quoted.
    # Please provide some sensible grouping.

    # Node Information
    data-path="/data"
    node-private-key-file="/secret/private.key"
    genesis-file="/etc/genesis/genesis.json"

    # TODO : insert as command line & mount Volume
    # rpc-http-authentication-credentials-file="none"
    # TODO : insert as command line & mount Volume
    # rpc-ws-authentication-credentials-file="none"
    # TODO : insert as command line & mount Volume
    # permissions-nodes-config-file="./permissions_config.toml"
    # TODO : insert as command line & mount Volume
    # permissions-accounts-config-file="./permissions_config.toml"

    logging={{ .Values.node.logging | quote }}
  
    {{- if .Values.node.p2p.enabled -}}
    # P2P network
    p2p-enabled={{ .Values.node.p2p.enabled }}
    discovery-enabled={{ .Values.node.p2p.discovery }}
    p2p-host={{ .Values.node.p2p.host | quote }}
    p2p-port={{ .Values.node.p2p.port }}
    max-peers={{ .Values.node.p2p.max_peers }}
    {{- end -}}
  
    # Transaction Pool
    tx-pool-retention-hours={{ .Values.node.tx_pool.retention_hours }}
    tx-pool-max-size={{ .Values.node.tx_pool.max_size }}

    min-gas-price={{ .Values.node.miner.gas_price | quote }}

    {{- if .Values.node.miner.enabled -}}
    # Mining
    miner-enabled={{ .Values.node.miner.enabled }}
    miner-coinbase={{ .Values.node.miner.coinbase | quote }}
    miner-extra-data={{ .Values.node.miner.extra_data | quote }}
    {{- end -}}

    {{ if or .Values.node.rpc.enabled .Values.node.graphql.enabled .Values.node.ws.enabled }}
    host-whitelist={{ .Values.node.http.whitlist }}
    {{ end }}

    {{- if .Values.node.rpc.enabled -}}
    # JSON-RPC
    rpc-http-enabled={{ .Values.node.rpc.enabled }}
    rpc-http-host={{ .Values.node.rpc.host | quote }}
    rpc-http-port={{ .Values.node.rpc.port }}
    rpc-http-api={{ .Values.node.rpc.api }}
    rpc-http-cors-origins={{ .Values.node.rpc.cors_origins }}
    rpc-http-authentication-enabled={{ .Values.node.rpc.authentication_enabled }}
    {{- end -}}
  
    {{- if .Values.node.graphql.enabled -}}
    # GRAPHQL-RPC
    graphql-http-enabled={{ .Values.node.graphql.enabled }}
    graphql-http-host={{ .Values.node.graphql.host | quote }}
    graphql-http-port={{ .Values.node.graphql.port }}
    graphql-http-cors-origins={{ .Values.node.graphql.cors_origins }}
    {{- end -}}
  
    {{- if .Values.node.ws.enabled -}}
    # WebSockets API
    rpc-ws-enabled={{ .Values.node.ws.enabled }}
    rpc-ws-host={{ .Values.node.ws.host | quote }}
    rpc-ws-port={{ .Values.node.rpc.port }}
    rpc-ws-api={{ .Values.node.ws.api }}
    #rpc-ws-apis=["DEBUG","ETH"]
    rpc-ws-authentication-enabled={{ .Values.node.ws.authentication_enabled }}
    {{- end -}}

    {{- if .Values.permissions.enabled -}}
    # Permissioning
    permissions-nodes-config-file-enabled={{ .Values.permissions.nodes.enabled }}
    permissions-accounts-config-file-enabled={{ .Values.permissions.accounts.enabled }}
    permissions-nodes-contract-enabled={{ .Values.permissions.nodes_contract.enabled }}
    permissions-nodes-contract-address={{ .Values.permissions.nodes_contract.address | quote }}
    {{- end -}}
  
    {{- if .Values.node.privacy.enabled -}}
    # Privacy
    privacy-enabled={{ .Values.node.privacy.enabled }}
    privacy-url={{ .Values.node.privacy.url | quote }}
    privacy-precompiled-address={{ .Values.node.privacy.precompiled_address }}
    {{- end -}}

    {{- if .Values.node.ws.enabled -}}
    # Prometheus Metrics Endpoint
    metrics-enabled={{ .Values.node.metrics.enabled }}
    metrics-host={{ .Values.node.metrics.host | quote }}
    metrics-port={{ .Values.node.metrics.port }}
    metrics-category={{ .Values.node.metrics.category }}
    metrics-push-enabled={{ .Values.node.metrics.push.enabled }}
    metrics-push-host={{ .Values.node.metrics.push.host | quote }}
    metrics-push-port={{ .Values.node.metrics.push.port }}
    metrics-push-interval={{ .Values.node.metrics.push.interval }}
    metrics-push-prometheus-job={{ .Values.node.metrics.push.prometheus | quote }}
    {{- end -}}
