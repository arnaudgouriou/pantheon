# Default values for genesys.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: pegasyseng/pantheon
  tag: "1.1.3"
  # Always | IfNotPresent
  pullPolicy: IfNotPresent

validators:
  generated: true

config:
  genesis:
    config:
      chainId: 1981
      constantinoplefixblock: 0
      ibft2:
        blockperiodseconds: 2
        epochlength: 30000
        requesttimeoutseconds: 10
    nonce: '0x0'
    timestamp: '0x58ee40ba'
    extraData: '0xf853a00000000000000000000000000000000000000000000000000000000000000000ea946dd110415a93f74c57964fdfe9a147f8204d907e947a5cde757578f00deb10416d39fdbfcce2dde099808400000000c0'
    gasLimit: '0x47b760'
    difficulty: '0x0'
    mixHash: '0x63746963616c2062797a616e74696e65206661756c7420746f6c6572616e6365'
    coinbase: '0x0000000000000000000000000000000000000000'
  blockchain:
    nodes:
      generate: true
      count: 2

initContainer:
  image-1: lachlanevenson/k8s-kubectl
  image-2: buoyantio/kubectl:v1.6.2
  image-3: k8s.gcr.io/hyperkube:v1.12.1

# Hyperkube image to use when cleaning up

# Sample
# kubectl create secret tls {{ $tlsClientSecretName }} --namespace {{ .Release.Namespace }} --cert=client.crt --key=client.key;
# kubectl create secret generic envoy --from-file=./some-secret.txt
# kubectl create secret generic openvpn-keystore-secret --from-file=./server.key --from-file=./ca.crt --from-file=./server.crt --from-file=./dh.pem

# Install kubecttl
# wget https://storage.googleapis.com/kubernetes-release/release/v1.14.0/bin/linux/amd64/kubectl -O /k8s/kubectl
# chmod +x /k8s/kubectl

# 'curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl && chmod +x ./kubectl'

# Generate Key from Pantheon
#
# ./bin/pantheon public-key export --to=public.key
# kubectl create secret generic bootnode-pantheon-node-bootnode --namespace {{ .Release.Namespace }} --from-file=private.key=./key
# kubectl create secret generic bootnode-pantheon-node-keys --namespace {{ .Release.Namespace }} --from-file=private.key=./key --from-file=public.key=./public.key


#    - name: BOOTNODE_PUBKEY_SECRET
#      valueFrom:
#        secretKeyRef:
#          name: bootnode-keys
#          key: public.key

# genesis:
#  config:
#  chainId: 1981
#    constantinoplefixblock: 0
#    ibft2:
#      blockperiodseconds: 2
#      epochlength: 30000
#      requesttimeoutseconds: 10
#  nonce: '0x0'
#  timestamp: '0x58ee40ba'
#  extraData: '0xf853a00000000000000000000000000000000000000000000000000000000000000000ea946dd110415a93f74c57964fdfe9a147f8204d907e947a5cde757578f00deb10416d39fdbfcce2dde099808400000000c0'
#  gasLimit: '0x47b760'
#  difficulty: '0x0'
#  mixHash: '0x63746963616c2062797a616e74696e65206661756c7420746f6c6572616e6365'
#  coinbase: '0x0000000000000000000000000000000000000000'
#  alloc:
#    31da2448f60abf1a54a1587725c4d7009ab5e2eb:
#      balance: '0x200000000000000000000000000000000000000000000000000000000000000'
#    3ffd8581913dc48eb522000c609016cd8a69dfec:
#      balance: '0x200000000000000000000000000000000000000000000000000000000000000'
#    c57f8c524368da17bd669f101c4023e2646b8dfb:
#      balance: '0x200000000000000000000000000000000000000000000000000000000000000'